# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dcs.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("dcs.proto", :syntax => :proto3) do
    add_message "dcs.OutTextRequest" do
      optional :text, :string, 1
      optional :display_time, :int32, 2
      optional :clear_view, :bool, 3
    end
    add_message "dcs.OutTextResponse" do
    end
    add_message "dcs.GetUserFlagRequest" do
      optional :flag, :string, 1
    end
    add_message "dcs.GetUserFlagResponse" do
      optional :value, :uint32, 1
    end
    add_message "dcs.SetUserFlagRequest" do
      optional :flag, :string, 1
      optional :value, :uint32, 2
    end
    add_message "dcs.SetUserFlagResponse" do
    end
    add_message "dcs.StreamEventsRequest" do
    end
    add_message "dcs.Event" do
      optional :time, :double, 1
      oneof :event do
        optional :shot, :message, 4, "dcs.Event.ShotEvent"
        optional :hit, :message, 5, "dcs.Event.HitEvent"
        optional :takeoff, :message, 6, "dcs.Event.TakeoffEvent"
        optional :land, :message, 7, "dcs.Event.LandEvent"
        optional :crash, :message, 8, "dcs.Event.CrashEvent"
        optional :ejection, :message, 9, "dcs.Event.EjectionEvent"
        optional :refueling, :message, 10, "dcs.Event.RefuelingEvent"
        optional :dead, :message, 11, "dcs.Event.DeadEvent"
        optional :pilot_dead, :message, 12, "dcs.Event.PilotDeadEvent"
        optional :base_capture, :message, 13, "dcs.Event.BaseCaptureEvent"
        optional :mission_start, :message, 14, "dcs.Event.MissionStartEvent"
        optional :mission_end, :message, 15, "dcs.Event.MissionEndEvent"
        optional :refueling_stop, :message, 16, "dcs.Event.RefuelingStopEvent"
        optional :birth, :message, 17, "dcs.Event.BirthEvent"
        optional :system_failure, :message, 18, "dcs.Event.SystemFailureEvent"
        optional :engine_startup, :message, 19, "dcs.Event.EngineStartupEvent"
        optional :engine_shutdown, :message, 20, "dcs.Event.EngineShutdownEvent"
        optional :player_enter_unit, :message, 21, "dcs.Event.PlayerEnterUnitEvent"
        optional :player_leave_unit, :message, 22, "dcs.Event.PlayerLeaveUnitEvent"
        optional :shooting_start, :message, 23, "dcs.Event.ShootingStartEvent"
        optional :shooting_end, :message, 24, "dcs.Event.ShootingEndEvent"
        optional :mark_add, :message, 25, "dcs.Event.MarkAddEvent"
        optional :mark_change, :message, 26, "dcs.Event.MarkChangeEvent"
        optional :mark_remove, :message, 27, "dcs.Event.MarkRemoveEvent"
      end
    end
    add_message "dcs.Event.Target" do
      optional :category, :enum, 1, "dcs.Event.ObjectCategory"
      oneof :target do
        optional :id, :uint64, 2
        optional :name, :string, 3
      end
    end
    add_message "dcs.Event.Position" do
      optional :lat, :double, 1
      optional :lon, :double, 2
      optional :alt, :double, 3
    end
    add_message "dcs.Event.ShotEvent" do
      optional :initiator, :string, 1
      optional :weapon, :uint64, 2
    end
    add_message "dcs.Event.HitEvent" do
      optional :initiator, :string, 1
      optional :weapon, :uint64, 2
      optional :target, :message, 3, "dcs.Event.Target"
    end
    add_message "dcs.Event.TakeoffEvent" do
      optional :initiator, :string, 1
      optional :place, :string, 2
    end
    add_message "dcs.Event.LandEvent" do
      optional :initiator, :string, 1
      optional :place, :string, 2
    end
    add_message "dcs.Event.CrashEvent" do
      optional :initiator, :string, 1
    end
    add_message "dcs.Event.EjectionEvent" do
      optional :initiator, :string, 1
    end
    add_message "dcs.Event.RefuelingEvent" do
      optional :initiator, :string, 1
    end
    add_message "dcs.Event.DeadEvent" do
      oneof :initiator do
        optional :id, :uint64, 2
        optional :name, :string, 3
      end
    end
    add_message "dcs.Event.PilotDeadEvent" do
      optional :initiator, :string, 1
    end
    add_message "dcs.Event.BaseCaptureEvent" do
      optional :initiator, :string, 1
      optional :place, :string, 2
    end
    add_message "dcs.Event.MissionStartEvent" do
    end
    add_message "dcs.Event.MissionEndEvent" do
    end
    add_message "dcs.Event.RefuelingStopEvent" do
      optional :initiator, :string, 1
    end
    add_message "dcs.Event.BirthEvent" do
      optional :initiator, :string, 1
    end
    add_message "dcs.Event.SystemFailureEvent" do
      optional :initiator, :string, 1
    end
    add_message "dcs.Event.EngineStartupEvent" do
      optional :initiator, :string, 1
    end
    add_message "dcs.Event.EngineShutdownEvent" do
      optional :initiator, :string, 1
    end
    add_message "dcs.Event.PlayerEnterUnitEvent" do
      optional :initiator, :string, 1
    end
    add_message "dcs.Event.PlayerLeaveUnitEvent" do
      optional :initiator, :string, 1
    end
    add_message "dcs.Event.ShootingStartEvent" do
      optional :initiator, :string, 1
    end
    add_message "dcs.Event.ShootingEndEvent" do
      optional :initiator, :string, 1
    end
    add_message "dcs.Event.MarkAddEvent" do
      optional :initiator, :string, 1
      optional :id, :uint32, 4
      optional :pos, :message, 5, "dcs.Event.Position"
      optional :text, :string, 6
      oneof :visibility do
        optional :group_id, :uint64, 2
        optional :coalition, :enum, 3, "dcs.Event.Coalition"
      end
    end
    add_message "dcs.Event.MarkChangeEvent" do
      optional :initiator, :string, 1
      optional :id, :uint32, 4
      optional :pos, :message, 5, "dcs.Event.Position"
      optional :text, :string, 6
      oneof :visibility do
        optional :group_id, :uint64, 2
        optional :coalition, :enum, 3, "dcs.Event.Coalition"
      end
    end
    add_message "dcs.Event.MarkRemoveEvent" do
      optional :initiator, :string, 1
      optional :id, :uint32, 4
      optional :pos, :message, 5, "dcs.Event.Position"
      optional :text, :string, 6
      oneof :visibility do
        optional :group_id, :uint64, 2
        optional :coalition, :enum, 3, "dcs.Event.Coalition"
      end
    end
    add_enum "dcs.Event.ObjectCategory" do
      value :UNIT, 0
      value :WEAPON, 1
      value :STATIC, 2
      value :SCENERY, 3
      value :BASE, 4
      value :CARGO, 5
    end
    add_enum "dcs.Event.Coalition" do
      value :NEUTRAL, 0
      value :RED, 1
      value :BLUE, 2
    end
  end
end

module Dcs
  OutTextRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.OutTextRequest").msgclass
  OutTextResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.OutTextResponse").msgclass
  GetUserFlagRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.GetUserFlagRequest").msgclass
  GetUserFlagResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.GetUserFlagResponse").msgclass
  SetUserFlagRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.SetUserFlagRequest").msgclass
  SetUserFlagResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.SetUserFlagResponse").msgclass
  StreamEventsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.StreamEventsRequest").msgclass
  Event = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event").msgclass
  Event::Target = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.Target").msgclass
  Event::Position = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.Position").msgclass
  Event::ShotEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.ShotEvent").msgclass
  Event::HitEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.HitEvent").msgclass
  Event::TakeoffEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.TakeoffEvent").msgclass
  Event::LandEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.LandEvent").msgclass
  Event::CrashEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.CrashEvent").msgclass
  Event::EjectionEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.EjectionEvent").msgclass
  Event::RefuelingEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.RefuelingEvent").msgclass
  Event::DeadEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.DeadEvent").msgclass
  Event::PilotDeadEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.PilotDeadEvent").msgclass
  Event::BaseCaptureEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.BaseCaptureEvent").msgclass
  Event::MissionStartEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.MissionStartEvent").msgclass
  Event::MissionEndEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.MissionEndEvent").msgclass
  Event::RefuelingStopEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.RefuelingStopEvent").msgclass
  Event::BirthEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.BirthEvent").msgclass
  Event::SystemFailureEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.SystemFailureEvent").msgclass
  Event::EngineStartupEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.EngineStartupEvent").msgclass
  Event::EngineShutdownEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.EngineShutdownEvent").msgclass
  Event::PlayerEnterUnitEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.PlayerEnterUnitEvent").msgclass
  Event::PlayerLeaveUnitEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.PlayerLeaveUnitEvent").msgclass
  Event::ShootingStartEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.ShootingStartEvent").msgclass
  Event::ShootingEndEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.ShootingEndEvent").msgclass
  Event::MarkAddEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.MarkAddEvent").msgclass
  Event::MarkChangeEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.MarkChangeEvent").msgclass
  Event::MarkRemoveEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.MarkRemoveEvent").msgclass
  Event::ObjectCategory = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.ObjectCategory").enummodule
  Event::Coalition = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("dcs.Event.Coalition").enummodule
end
